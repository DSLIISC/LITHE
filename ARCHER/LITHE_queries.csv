DBid,Rewritten_Query
bike_1,"WITH palo_alto_count AS ( SELECT COUNT(*) AS count_pa FROM station WHERE city = 'Palo Alto' ) SELECT (SELECT count_pa FROM palo_alto_count) - COUNT(*) AS diff FROM station WHERE city = 'San Francisco'; "
bike_1,"SELECT 100.0 * COUNT(CASE WHEN dock_count > 25 THEN 1 END) / COUNT(*) AS proportion FROM station WHERE city = 'San Francisco'; "
driving_school," WITH StaffAvgPrice AS ( SELECT staff_id, AVG(price) AS avg_price FROM Lessons GROUP BY staff_id ), MinAvgPrice AS ( SELECT MIN(avg_price) AS min_avg_price FROM StaffAvgPrice ) SELECT A.staff_id, A.avg_price - M.min_avg_price AS diff FROM StaffAvgPrice A CROSS JOIN MinAvgPrice M ORDER BY A.avg_price DESC LIMIT 1; "
driving_school,"SELECT A.staff_id, AVG(A.price) - (SELECT AVG(price) FROM Lessons GROUP BY staff_id ORDER BY AVG(price) ASC LIMIT 1) AS diff FROM Lessons A GROUP BY A.staff_id ORDER BY AVG(A.price) DESC LIMIT 1"
formula_1," SELECT 1.0 * SUM(CASE WHEN country = 'USA' THEN 1 ELSE 0 END) / SUM(CASE WHEN country = 'Russia' THEN 1 ELSE 0 END) AS ratio FROM circuits WHERE country IN ('USA', 'Russia')"
formula_1," SELECT 1.0 * SUM(CASE WHEN country = 'USA' THEN 1 ELSE 0 END) / SUM(CASE WHEN country = 'UK' THEN 1 ELSE 0 END) AS ratio FROM races A JOIN circuits B ON A.circuitId = B.circuitId WHERE A.year BETWEEN 2001 AND 2009 AND country IN ('USA', 'UK') "
hospital_1," WITH foo_patients AS ( SELECT DISTINCT Patient FROM Medication A JOIN Prescribes B ON A.code = B.Medication WHERE A.Brand = 'Foo Labs' ), baz_patients AS ( SELECT DISTINCT Patient FROM Medication A JOIN Prescribes B ON A.code = B.Medication WHERE A.Brand = 'Baz Industries' ) SELECT COUNT(*) - (SELECT COUNT(*) FROM baz_patients) AS diff FROM foo_patients; "
hospital_1," WITH TrainingCounts AS ( SELECT Physician, COUNT(*) AS training_count FROM Trained_In GROUP BY Physician ), MaxTrainingCount AS ( SELECT MAX(training_count) AS max_count FROM TrainingCounts ) SELECT A.Name, A.Position, 50 * TC.training_count AS cost FROM Physician A JOIN TrainingCounts TC ON A.EmployeeID = TC.Physician JOIN MaxTrainingCount MTC ON TC.training_count = MTC.max_count "
hospital_1," WITH MinMaxBlockFloor AS ( SELECT MIN(BlockFloor) AS MinBlockFloor, MAX(BlockFloor) AS MaxBlockFloor FROM Room ), Counts AS ( SELECT SUM(CASE WHEN BlockFloor = MinBlockFloor AND Unavailable = '0' THEN 1 ELSE 0 END) AS MinFloorCount, SUM(CASE WHEN BlockFloor = MaxBlockFloor AND Unavailable = '0' THEN 1 ELSE 0 END) AS MaxFloorCount FROM Room, MinMaxBlockFloor ) SELECT MaxFloorCount - MinFloorCount AS diff FROM Counts; "
riding_club," WITH total_club_count AS ( SELECT COUNT(*) AS total_count FROM club ) SELECT 100.0 * (COUNT(*) + 1) / MAX(total_count) AS ratio FROM club, total_club_count WHERE Start_year < 2009 AND Club_name != 'Helsingborgs IF'; "
riding_club," WITH player_coach_cte AS ( SELECT A.Player_ID FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE C.Coach_name = 'Jameson Tomas' ) SELECT 1.0 * COUNT(*) / (SELECT COUNT(*) FROM player_coach_cte) AS prob FROM player_coach_cte JOIN player A ON player_coach_cte.Player_ID = A.Player_ID WHERE A.Rank = '1st';"
riding_club," WITH PlayerCoach AS ( SELECT A.Player_ID, A.Player_name, A.Rank FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE C.Coach_name = 'Jameson Tomas' ), TotalPlayers AS ( SELECT COUNT(*) AS TotalCount FROM PlayerCoach ), FirstRankedPlayers AS ( SELECT COUNT(*) AS FirstRankCount FROM PlayerCoach WHERE Rank = '1st' AND Player_name != 'Fiona Shiells' ), FionaCount AS ( SELECT COUNT(*) AS FionaCount FROM PlayerCoach WHERE Player_name = 'Fiona Shiells' ) SELECT 1.0 * (FirstRankCount + FionaCount) / TotalCount AS prob FROM FirstRankedPlayers, FionaCount, TotalPlayers; "
riding_club,"SELECT 100.0 * SUM(CASE WHEN Start_year < 2001 AND Region != 'USA' THEN 1 ELSE 0 END + CASE WHEN Region = 'USA' THEN 1 ELSE 0 END) / COUNT(*) AS percent FROM club;"
riding_club," WITH PlayersWithoutCoach AS ( SELECT A.Player_ID FROM player A LEFT JOIN player_coach B ON A.Player_ID = B.Player_ID WHERE B.Player_ID IS NULL ), RankedPlayersWithoutCoach AS ( SELECT Player_ID FROM PlayersWithoutCoach WHERE Player_ID IN ( SELECT Player_ID FROM player WHERE Rank = '1st' ) ) SELECT 1.0 * COUNT(*) / (SELECT COUNT(*) FROM PlayersWithoutCoach) AS ratio FROM RankedPlayersWithoutCoach; "
riding_club," WITH players_with_coach AS ( SELECT A.Player_ID, A.Rank FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID ), filtered_players AS ( SELECT Player_ID FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM players_with_coach) AND (Rank = '1st' OR Rank = '2nd') ), players_with_coach_rank AS ( SELECT Player_ID FROM players_with_coach WHERE Rank = '1st' OR Rank = '2nd' ) SELECT 1.0 * (SELECT COUNT(*) FROM players_with_coach_rank) / (SELECT COUNT(*) FROM players_with_coach) - (SELECT 1.0 * COUNT(*) FROM filtered_players) / (SELECT COUNT(*) FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM players_with_coach)) AS diff; "
wine_1," SELECT MAX(price) - MIN(price) AS diff FROM ( SELECT CASE WHEN Winery = 'Carlisle' THEN price * 1.1 ELSE price END AS price FROM wine WHERE Score = '98' ) AS adjusted_prices "
wine_1," WITH filtered_wine AS ( SELECT * FROM wine WHERE name = 'Cabernet Sauvignon' ) SELECT Winery, Price - (SELECT AVG(Price) FROM filtered_wine) AS diff FROM filtered_wine WHERE Score = (SELECT MAX(Score) FROM filtered_wine) "
wine_1," WITH WineData AS ( SELECT Winery, Price, Score - CASE WHEN Year = '2005' THEN 10 ELSE 0 END AS AdjustedScore, Name FROM wine ), CabernetData AS ( SELECT Winery, Price, AdjustedScore, AVG(Price) OVER () AS AvgPrice, MAX(AdjustedScore) OVER () AS MaxScore FROM WineData WHERE Name = 'Cabernet Sauvignon' ) SELECT Winery, Price - AvgPrice AS diff FROM CabernetData WHERE AdjustedScore = MaxScore; "
wine_1,"SELECT 100.0 * COUNT(DISTINCT Winery) / (SELECT COUNT(DISTINCT Winery) FROM wine) AS percent FROM ( SELECT Winery FROM wine WHERE Score >= 90 GROUP BY Winery HAVING COUNT(DISTINCT Year) >= 3 AND MAX(Year) - MIN(Year) = 2 ) "
wine_1," SELECT 100.0 * COUNT(DISTINCT Winery) / (SELECT COUNT(DISTINCT Winery) FROM wine) AS percent FROM ( SELECT Winery FROM ( SELECT Winery, No, Year, Score - 5 AS Score FROM wine WHERE Grape = 'Pinot Noir' UNION ALL SELECT Winery, No, Year, Score FROM wine WHERE Grape != 'Pinot Noir' ) AS wines WHERE Score >= 90 GROUP BY Winery HAVING COUNT(DISTINCT Year) >= 3 AND MAX(Year) - MIN(Year) = 2 ) "
world_1,"WITH country_data AS ( SELECT Name, Code, GNP, GNPOld + 9999.0 AS GNPOld_adjusted FROM country WHERE Continent = 'South America' UNION ALL SELECT Name, Code, GNP, GNPOld FROM country WHERE Continent != 'South America' ), non_arabic_countries AS ( SELECT Code FROM country_data WHERE Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE Language = 'Arabic' AND IsOfficial = 'T' ) ) SELECT Name FROM country_data WHERE Code IN (SELECT Code FROM non_arabic_countries) ORDER BY 100.0 * (GNP - GNPOld_adjusted) / GNPOld_adjusted DESC LIMIT 1;"
world_1," SELECT SUM(CASE WHEN Continent = 'North America' AND GNP < GNPOld THEN 1 ELSE 0 END) - SUM(CASE WHEN Continent = 'South America' AND GNP < GNPOld THEN 1 ELSE 0 END) AS diff FROM country WHERE Continent IN ('North America', 'South America') "
world_1,"SELECT COUNT ( * ) - ( SELECT COUNT ( * ) FROM country WHERE GNP < GNPOld AND Continent = 'South America' ) AS diff FROM country WHERE GNP < GNPOld AND Continent = 'North America'"
world_1," WITH europe_countries AS ( SELECT Continent, name, CASE WHEN LifeExpectancy > 75 THEN 103000 ELSE Population END AS Population FROM country WHERE Continent = 'Europe' ) SELECT Population * (1 + 0.004) AS population_in_1year FROM europe_countries WHERE name = 'United Kingdom'; "
world_1,"SELECT CAST ( IndepYear + LifeExpectancy AS INT ) AS death_year FROM ( SELECT name , IndepYear , LifeExpectancy + 10 AS LifeExpectancy FROM country WHERE 1.0 * GNP / Population > ( SELECT 1.0 * SUM ( GNP ) / SUM ( Population ) FROM country WHERE Continent = 'Europe' ) UNION ALL SELECT name , IndepYear , LifeExpectancy FROM country WHERE NOT ( 1.0 * GNP / Population > ( SELECT 1.0 * SUM ( GNP ) / SUM ( Population ) FROM country WHERE Continent = 'Europe' ) ) ) WHERE name = 'Zambia'"
